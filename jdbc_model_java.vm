##--------------------------------------------------------------------------------------------------------
## Key fields = fields in Primary Key    
#set( $keyFields = $entity.getAttributesByCriteria( $const.KEY ) )
##--------------------------------------------------------------------------------------------------------
## Data fields = fields not in Primary Key and not in selected Links    
## #set( $dataFields = $entity.getAttributesByCriteria( $const.NOT_KEY, $const.NOT_IN_SELECTED_LINKS ) )
#set( $dataFields = $entity.getAttributesByCriteria( $const.NOT_KEY ) )
##--------------------------------------------------------------------------------------------------------
## Link fields = fields not in Primary Key and used as FK in selected Links    
#set( $fieldsLink = $entity.getAttributesByCriteria( $const.NOT_KEY, $const.IN_SELECTED_LINKS ) )
##--------------------------------------------------------------------------------------------------------
## Mapped fields = fields in Primary Key or not in selected Links    
#set( $allMappedFields = $fn.concatLists($entity.keyAttributes, $dataFields) )
##--------------------------------------------------------------------------------------------------------
package ${target.javaPackageFromFolder($SRC)};

import io.swagger.v3.oas.annotations.media.Schema;
import java.io.Serializable;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
#foreach( $import in $java.imports($entity.attributes) )
import $import;
#end

/**
 * Java bean for '${entity.name}' entity
 */
@Accessors(chain = true)
@Getter
@Setter
@Schema(description = "Klasa ${entity.name}")
@ToString(callSuper = true)
public class $entity.name implements Serializable {
    private static final long serialVersionUID = 1L;
    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
#foreach( $field in $entity.keyAttributes )
    // DB : $field.databaseName $field.databaseType $field.databaseComment
    private $field.formattedType(0) $field.formattedName(0)#if($field.hasInitialValue()) = ${field.initialValue} #end;
#end
    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
#foreach( $field in $dataFields )
    // DB : $field.databaseName $field.databaseType $field.databaseComment
    private $field.formattedType(0) $field.formattedName(0)#if($field.hasInitialValue()) = ${field.initialValue} #end;
#end
}
